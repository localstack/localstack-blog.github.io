<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Waldemar Hummer on LocalStack</title><link>https://blog.localstack.cloud/contributors/waldemar-hummer/</link><description>Recent content in Waldemar Hummer on LocalStack</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 03 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.localstack.cloud/contributors/waldemar-hummer/index.xml" rel="self" type="application/rss+xml"/><item><title>Celebrating 50,000 GitHub Stars for LocalStack!</title><link>https://blog.localstack.cloud/2024-01-03-celebrating-50k-github-stars-localstack/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.localstack.cloud/2024-01-03-celebrating-50k-github-stars-localstack/</guid><description>Seven years ago, on August 16, 2016, the LocalStack project was born. The journey since then has been nothing short of incredible. LocalStack has now crossed 50,000 stars on GitHub after three major releases and dozens of minor releases. For the past 16 months since LocalStack 1.0Â went live, it has been on a consistent upward trajectory, and we are proud of everyone who is discovering, starring, and joining our project &amp;amp; community!</description></item><item><title>Develop your Cloudflare Workers + AWS apps locally with LocalStack &amp; Miniflare</title><link>https://blog.localstack.cloud/2023-06-26-develop-your-cloudflare-workers-aws-apps-locally-with-localstack-miniflare/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.localstack.cloud/2023-06-26-develop-your-cloudflare-workers-aws-apps-locally-with-localstack-miniflare/</guid><description>LocalStack is a cloud development platform that turbocharges your cloud application development &amp;amp; testing, fosters team collaboration, and provides an integrated cloud developer experience with a local cloud sandbox. LocalStackâ€™s core cloud emulator runs inside a Docker container and provides a set of external network ports for integrations, SDKs, or CI providers for developers to execute their cloud &amp;amp; serverless applications fully locally without talking to the real cloud services. This enables a highly efficient development loop, by reducing the feedback cycles from minutes to seconds.</description></item><item><title>LocalStack x Gitpod - Run cloud applications with LocalStack and Gitpod</title><link>https://blog.localstack.cloud/2022-09-26-localstack-x-gitpod-run-cloud-applications-with-localstack-and-gitpod/</link><pubDate>Mon, 26 Sep 2022 11:31:19 +0530</pubDate><guid>https://blog.localstack.cloud/2022-09-26-localstack-x-gitpod-run-cloud-applications-with-localstack-and-gitpod/</guid><description>Shipping applications to production requires them to be battle-tested in the dev environment. The dev environment should mimic the production environment as closely as possible. This comes with a cost: testing cloud applications is cumbersome as they have many moving parts. For instance, if you build a simple Lambda function in AWS, you might use services such as CloudWatch, S3, IAM, etc.
Imagine configuring your project and provisioning these cloud resources in a test environment every time for developing new features.</description></item><item><title>Cloud Pods - Enabling state sharing and team collaboration for local cloud development</title><link>https://blog.localstack.cloud/2022-08-26-cloud-pods/</link><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.localstack.cloud/2022-08-26-cloud-pods/</guid><description>ðŸ“¢ Cloud Pods have seen a lot of improvements since this blog post was published. We have deprecated the commit and inject commands in favour of the new save and load commands. We have also made Cloud Pods available to our Community &amp;amp; Pro users. For more information, please refer to our documentation. Background: Ephemeral and persistent state in LocalStack By default, the state of all services in LocalStack is ephemeral - i.</description></item></channel></rss>